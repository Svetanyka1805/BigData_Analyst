# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
#  Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def my_div(dividend: int, divider: int):
    if divider == 0:
        res = 0
    else:
        res = dividend / divider
    return res

str = input("Введите делимое и делитель через пробел: ")
div = str.split(" ")

res_div = my_div(int(div[0]), int(div[1]))
print(res_div)


# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы.
# Реализовать вывод данных о пользователе одной строкой.

def my_func(name: str, sername: str, year_birth: str, city: str, email: str, telephone: str):
    return f"{name} {sername}, год рождения {year_birth}, город проживания: {city}, email: {email}, тел.: {telephone}"

arg1 = input("Введите имя: ")
arg2 = input("Введите фамилию: ")
arg3 = input("Введите год рождения: ")
arg4 = input("Введите город проживания: ")
arg5 = input("Введите email: ")
arg6 = input("Введите телефон: ")

print(my_func(name=arg1, sername=arg2, year_birth=arg3, city=arg4, email=arg5, telephone=arg6))


# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента,
# и возвращает сумму наибольших двух аргументов.

def my_func(arg1, arg2, arg3):
    my_list = [arg1, arg2, arg3]
    my_list.sort(reverse=True)

    return my_list[0] + my_list[1]

print(my_func(7, 3, 5))
print(my_func(1, 3, 7))
print(my_func(5, 1, 2))


# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
#
def my_func1(x: float, y: int):
    return x ** y
print(my_func1(10, -3))

#
def my_func2(x: float, y: int):
    res = x
    power = abs(y)

    while power > 1:
        res = res * x
        power -= 1

    if y < 0:
        res = 1/res
    return res

print(my_func2(10, 2))


# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
answer: str = "Y"
sum = 0.0
while answer.upper() != "N":
    str_ch = input("Введите числа через пробел: ").split()

    for elem in str_ch:
        if elem.isdigit():
            sum = sum + float(elem)
        else:
            answer = "N"
    print(sum)


# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же,
# но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре.
# Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
# Необходимо использовать написанную ранее функцию int_func().
def int_func(word: str):
     res = word.title()
     return res

# 1 варинат
res = ""
words = input("Введите строку из слов: ").split()
for elem in words:
    if res != "":
        res = f"{res} "
    res = f"{res}{int_func(elem)}"
print(res)

# 2 вариант
words = input("Введите строку из слов: ").split()
for elem in words:
    words[words.index(elem)] = int_func(elem)

print(" ".join(words))
